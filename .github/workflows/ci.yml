name: CI
on:
  pull_request:
    paths-ignore:
      - "docs/**"
  push:
    branches:
      - master
    paths-ignore:
      - "docs/**"

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUST_BACKTRACE: short
  # RUSTFLAGS: "-Dwarnings -Drust-2018-idioms -Wunreachable-pub -Wrust-2021-compatibility"
  RUSTFLAGS: "-Dwarnings -Drust-2018-idioms -Wrust-2021-compatibility"
  RUSTUP_MAX_RETRIES: 10

jobs:
  cleanup-runs:
    if: "!startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/heads/master'"
    runs-on: ubuntu-latest
    steps:
      - uses: rokroskar/workflow-run-cleanup-action@master
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  compile:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        task: [root, tools, wasm-light-client, wasm-tendermint]
        toolchain: [stable, nightly]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache toolchain
        uses: actions/cache@v2
        with:
          path: |
            ~/.rustup/settings.toml
            ~/.rustup/toolchains/${{ matrix.toolchain }}-*
            ~/.rustup/update-hashes/${{ matrix.toolchain }}-*
          key: compile-rust-toolchain_${{ matrix.os }}-${{ matrix.toolchain }}

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          components: cargo, rust-src
          target: wasm32-unknown-unknown
          override: true

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v1

      - name: Compile ${{ matrix.task }}
        run: cargo compile-${{ matrix.task }}

  test-crate:
    strategy:
      fail-fast: false
      matrix:
        crate: [tendermint, tendermint-light-client, tendermint-proto, tendermint-rpc, tendermint-test, tendermint-testgen]
        os: [macos-latest, ubuntu-latest, windows-latest]
        toolchain: [stable, nightly]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache toolchain
        uses: actions/cache@v2
        with:
          path: |
            ~/.rustup/settings.toml
            ~/.rustup/toolchains/${{ matrix.toolchain }}-*
            ~/.rustup/update-hashes/${{ matrix.toolchain }}-*
          key: test-rust-toolchain_${{ matrix.os }}-${{ matrix.toolchain }}-${{ matrix.crate }}

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          components: cargo, rust-src
          override: true

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v1

      - name: Test ${{ matrix.crate }}
        run: cargo test --all-features --all-targets --no-fail-fast -p ${{ matrix.crate }}
